{"version":3,"sources":["webpack:///./src/components/postCard.js","webpack:///./src/pages/index.js"],"names":["node","postClass","count","className","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","to","fields","slug","title","BlogIndex","location","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","postCounter","path","keywords","description","map","key","props","query","render"],"mappings":"gKAGe,kBAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,MAApB,OACb,6BACEC,UAAS,cAAeD,EAAQ,GAAM,GAAd,mBAAf,IACPD,EADO,KAELD,EAAKI,YAAYC,UAAjB,yBACJC,MACEN,EAAKI,YAAYC,WAAa,CAC5BE,gBAAgB,OACdP,EAAKI,YAAYC,UAAUG,gBAAgBC,MAAMC,IADpC,MAMnB,kBAAC,OAAD,CAAMC,GAAI,QAAUX,EAAKY,OAAOC,KAAMV,UAAU,kBAC9C,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,mBACXH,EAAKI,YAAYU,OAASd,EAAKY,OAAOC,UCR3CE,G,oBAAY,SAAC,EAAUC,GAAc,IAAtBC,EAAqB,EAArBA,KACbC,EAAYD,EAAKE,KAAKC,aAAaN,MACnCO,EAAQJ,EAAKK,kBAAkBC,MACjCC,EAAc,EAElB,OACE,kBAAC,IAAD,CAAQV,MAAOI,EAAWO,KAAK,KAC7B,kBAAC,IAAD,CACEX,MAAM,OACNY,SAAU,CAAC,OAAD,iCAGXT,EAAKE,KAAKC,aAAaO,aACtB,4BAAQxB,UAAU,aAChB,wBAAIA,UAAU,mBACXc,EAAKE,KAAKC,aAAaO,cAI9B,yBAAKxB,UAAU,aACZkB,EAAMO,KAAI,YAAe,IAAZ5B,EAAW,EAAXA,KAEZ,OADAwB,IAEE,kBAAC,EAAD,CACEK,IAAK7B,EAAKY,OAAOC,KACjBX,MAAOsB,EACPxB,KAAMA,EACNC,UAAS,gBA0CR,mBAAA6B,GAAK,OAClB,kBAAC,cAAD,CACEC,MAnCY,aAoCZC,OAAQ,SAAAf,GAAI,OACV,kBAAC,EAAD,eAAWD,SAAUc,EAAMd,SAAUc,OAAK,EAACb,KAAMA,GAAUa,S","file":"component---src-pages-index-js-f797cfa94dce54d236e6.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default ({ node, postClass, count }) => (\n  <article\n    className={`post-card ${count % 3 === 0 && `post-card-large`} ${\n      postClass\n    } ${node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n      }\n    }\n  >\n    <Link to={'/blog' + node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <h2 className=\"post-card-title\">\n          {node.frontmatter.title || node.fields.slug}\n        </h2>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\n// import \"../styles/global.scss\"\nimport \"../styles/normalize.css\"\nimport \"../styles/css/screen.css\"\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst BlogIndex = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={siteTitle} path=\"/\">\n      <SEO\n        title=\"Home\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      {/* <Bio /> */}\n      {data.site.siteMetadata.description && (\n        <header className=\"page-head\">\n          <h2 className=\"page-head-title\">\n            {data.site.siteMetadata.description}\n          </h2>\n        </header>\n      )}\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}