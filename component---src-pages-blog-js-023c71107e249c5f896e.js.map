{"version":3,"sources":["webpack:///./src/components/horizontalLine.js","webpack:///./src/components/blog/blogItem.js","webpack:///./src/pages/blog.js"],"names":["HorizontalLine","color","style","backgroundColor","height","node","postClass","className","padding","id","margin","frontmatter","title","fields","slug","fluid","thumbnail","childImageSharp","marginTop","marginBottom","quote","description","to","BlogIndex","location","data","navHeading","site","siteMetadata","posts","allMarkdownRemark","edges","postCounter","path","keywords","map","key","count","props","query","render"],"mappings":"6FAAA,yBAaeA,IAXf,YAAoC,IAAVC,EAAS,EAATA,MACxB,OACE,wBACEC,MAAO,CACLC,gBAAiBF,EACjBG,OAAQ,O,oLCFD,kBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OACb,6BACEC,UAAU,sCACVL,MAAO,CAAEM,QAAS,IAElB,yBAAKD,UAAU,qBACb,wBAAIE,GAAG,kBAAkBP,MAAO,CAAEQ,OAAQ,IACvCL,EAAKM,YAAYC,OAASP,EAAKQ,OAAOC,MAEzC,kBAAC,IAAD,CACEC,MAAOV,EAAKM,YAAYK,UAAUC,gBAAgBF,MAClDR,UAAS,aAAeD,EAAf,KACPD,EAAKM,YAAYK,UAAjB,yBAEFd,MACEG,EAAKM,YAAYK,WAAa,CAC5BE,UAAW,OACXC,aAAc,UAIpB,oCAAad,EAAKM,YAAYS,OAC9B,2BAAIf,EAAKM,YAAYU,cAEvB,kBAAC,OAAD,CAAMC,GAAI,QAAUjB,EAAKQ,OAAOC,KAAMP,UAAU,4BAAhD,YAGA,kBAAC,IAAD,CAAgBN,MAAM,yBCnBpBsB,EAAY,SAAC,EAAUC,GAAc,IAAtBC,EAAqB,EAArBA,KACbC,EAAaD,EAAKE,KAAKC,aAAaF,WACpCG,EAAQJ,EAAKK,kBAAkBC,MACjCC,EAAc,EAElB,OACE,kBAAC,IAAD,CAAQN,WAAYA,EAAYO,KAAK,SACnC,kBAAC,IAAD,CAAKrB,MAAM,OAAOsB,SAAU,CAAC,OAAD,iCAE3BT,EAAKE,KAAKC,aAAaP,aACtB,4BAAQd,UAAU,aAChB,wBAAIA,UAAU,mBACXkB,EAAKE,KAAKC,aAAaP,cAI9B,kBAAC,IAAD,CAAgBpB,MAAM,uBACtB,yBAAKM,UAAU,aACZsB,EAAMM,KAAI,YAAe,IAAZ9B,EAAW,EAAXA,KAEZ,OADA2B,IAEE,kBAAC,EAAD,CACEI,IAAK/B,EAAKQ,OAAOC,KACjBuB,MAAOL,EACP3B,KAAMA,EACNC,UAAS,eA8CR,mBAAAgC,GAAK,OAClB,kBAAC,cAAD,CACEC,MAvCY,YAwCZC,OAAQ,SAAAf,GAAI,OACV,kBAAC,EAAD,eAAWD,SAAUc,EAAMd,SAAUc,OAAK,EAACb,KAAMA,GAAUa,S","file":"component---src-pages-blog-js-023c71107e249c5f896e.js","sourcesContent":["import React from \"react\"\n\nfunction HorizontalLine({ color }) {\n  return (\n    <hr\n      style={{\n        backgroundColor: color,\n        height: 2,\n      }}\n    />\n  )\n}\n\nexport default HorizontalLine\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport HorizontalLine from \"../horizontalLine\"\n\nexport default ({ node, postClass }) => (\n  <article\n    className=\"post-content page-template no-image\"\n    style={{ padding: 0 }}\n  >\n    <div className=\"post-content-body\">\n      <h3 id=\"heading-level-3\" style={{ margin: 0 }}>\n        {node.frontmatter.title || node.fields.slug}\n      </h3>\n      <Img\n        fluid={node.frontmatter.thumbnail.childImageSharp.fluid}\n        className={`post-card ${postClass} ${\n          node.frontmatter.thumbnail ? `with-image` : `no-image`\n        }`}\n        style={\n          node.frontmatter.thumbnail && {\n            marginTop: \"2rem\",\n            marginBottom: \"4rem\",\n          }\n        }\n      />\n      <blockquote>{node.frontmatter.quote}</blockquote>\n      <p>{node.frontmatter.description}</p>\n    </div>\n    <Link to={\"/blog\" + node.fields.slug} className=\"button primary fit small\">\n      Readmore\n    </Link>\n    <HorizontalLine color=\"rgba(0, 0, 0, 0.5)\" />\n  </article>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n// import \"../styles/global.scss\"\nimport \"../styles/normalize.css\"\nimport \"../styles/css/screens/main.css\"\n\nimport BlogItem from \"../components/blog/blogItem\"\nimport HorizontalLine from \"../components/horizontalLine\"\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst BlogIndex = ({ data }, location) => {\n  const navHeading = data.site.siteMetadata.navHeading\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout navHeading={navHeading} path=\"/blog\">\n      <SEO title=\"Blog\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n      {/* <Bio /> */}\n      {data.site.siteMetadata.description && (\n        <header className=\"page-head\">\n          <h2 className=\"page-head-title\">\n            {data.site.siteMetadata.description}\n          </h2>\n        </header>\n      )}\n      <HorizontalLine color=\"rgba(0, 0, 0, 0.5)\" />\n      <div className=\"blog-body\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <BlogItem\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        navHeading\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/(blogs)/\" } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            quote\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}