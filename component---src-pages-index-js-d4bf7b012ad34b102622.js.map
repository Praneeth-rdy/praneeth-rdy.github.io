{"version":3,"sources":["webpack:///./src/components/horizontalLine.js","webpack:///./src/components/postCard.js","webpack:///./src/components/homeScreen/introSection.js","webpack:///./src/pages/index.js"],"names":["HorizontalLine","color","style","backgroundColor","height","node","postClass","count","className","frontmatter","thumbnail","backgroundImage","childImageSharp","fluid","src","to","fields","slug","title","IntroSection","fullName","image","console","log","href","download","width","BlogIndex","location","data","navHeading","site","siteMetadata","authorFullName","posts","allMarkdownRemark","edges","file","postCounter","path","keywords","map","key","props","query","render"],"mappings":"uHAAA,yBAaeA,IAXf,YAAoC,IAAVC,EAAS,EAATA,MACxB,OACE,wBACEC,MAAO,CACLC,gBAAiBF,EACjBG,OAAQ,O,6HCJD,kBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,MAApB,OACb,6BACEC,UAAS,cAAeD,EAAQ,GAAM,GAAd,mBAAf,IACPD,EADO,KAELD,EAAKI,YAAYC,UAAjB,yBACJR,MACEG,EAAKI,YAAYC,WAAa,CAC5BC,gBAAgB,OACdN,EAAKI,YAAYC,UAAUE,gBAAgBC,MAAMC,IADpC,MAMnB,kBAAC,OAAD,CAAMC,GAAI,QAAUV,EAAKW,OAAOC,KAAMT,UAAU,kBAC9C,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,mBACXH,EAAKI,YAAYS,OAASb,EAAKW,OAAOC,U,iECSlCE,MAvBf,YAA4C,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAEhC,OADAC,QAAQC,IAAIF,GAEV,6BAASb,UAAU,2BACjB,yBAAKA,UAAU,cACb,6BACE,0CACA,4BAAKY,GACL,wBAAIZ,UAAU,eAAd,mCACA,uBACEA,UAAU,SACVgB,KAAK,+BACLC,SAAS,gCAHX,qBASJ,kBAAC,IAAD,CAAKjB,UAAU,cAAcK,MAAOQ,EAAOnB,MAAO,CAAEwB,MAAO,aCR3DC,EAAY,SAAC,EAAUC,GAAc,IAAtBC,EAAqB,EAArBA,KACbC,EAAaD,EAAKE,KAAKC,aAAaF,WACpCV,EAAWS,EAAKE,KAAKC,aAAaC,eAClCC,EAAQL,EAAKM,kBAAkBC,MAC/Bf,EAAQQ,EAAKQ,KAAKzB,gBAAgBC,MACpCyB,EAAc,EAElB,OACE,kBAAC,IAAD,CAAQR,WAAYA,EAAYS,KAAK,KACnC,kBAAC,IAAD,CAAKrB,MAAM,OAAOsB,SAAU,CAAC,OAAD,iCAG5B,kBAAC,EAAD,CAAcpB,SAAUA,EAAUC,MAAOA,IACzC,kBAAC,IAAD,CAAgBpB,MAAM,uBAEtB,yBAAKO,UAAU,aACZ0B,EAAMO,KAAI,YAAe,IAAZpC,EAAW,EAAXA,KAEZ,OADAiC,IAEE,kBAAC,EAAD,CACEI,IAAKrC,EAAKW,OAAOC,KACjBV,MAAO+B,EACPjC,KAAMA,EACNC,UAAS,eAkDR,mBAAAqC,GAAK,OAClB,kBAAC,cAAD,CACEC,MA3CY,aA4CZC,OAAQ,SAAAhB,GAAI,OACV,kBAAC,EAAD,eAAWD,SAAUe,EAAMf,SAAUe,OAAK,EAACd,KAAMA,GAAUc,S","file":"component---src-pages-index-js-d4bf7b012ad34b102622.js","sourcesContent":["import React from \"react\"\n\nfunction HorizontalLine({ color }) {\n  return (\n    <hr\n      style={{\n        backgroundColor: color,\n        height: 2,\n      }}\n    />\n  )\n}\n\nexport default HorizontalLine\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default ({ node, postClass, count }) => (\n  <article\n    className={`post-card ${count % 3 === 0 && `post-card-large`} ${\n      postClass\n    } ${node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n      }\n    }\n  >\n    <Link to={'/blog' + node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <h2 className=\"post-card-title\">\n          {node.frontmatter.title || node.fields.slug}\n        </h2>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport Img from \"gatsby-image\"\n\nimport \"../../styles/css/screens/homescreen/intro-section.css\"\n\nfunction IntroSection({ fullName, image }) {\n  console.log(image)\n  return (\n    <section className=\"page-head intro-section\">\n      <div className=\"intro-text\">\n        <div>\n          <h3>Hello, I'm</h3>\n          <h1>{fullName}</h1>\n          <h3 className=\"designation\">Passionate Full Stack Developer</h3>\n          <a\n            className=\"button\"\n            href=\"Praneeth-Reddy-Kolanu-CV.pdf\"\n            download=\"Praneeth-Reddy-Kolanu-CV.pdf\"\n          >\n            Download Resume\n          </a>\n        </div>\n      </div>\n      <Img className=\"intro-image\" fluid={image} style={{ width: \"400px\" }} />\n    </section>\n  )\n}\n\nexport default IntroSection\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\nimport HorizontalLine from \"../components/horizontalLine\"\n\n// import \"../styles/global.scss\"\nimport \"../styles/normalize.css\"\nimport \"../styles/css/screens/main.css\"\n\nimport IntroSection from \"../components/homeScreen/introSection\"\n\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst BlogIndex = ({ data }, location) => {\n  const navHeading = data.site.siteMetadata.navHeading\n  const fullName = data.site.siteMetadata.authorFullName\n  const posts = data.allMarkdownRemark.edges\n  const image = data.file.childImageSharp.fluid\n  let postCounter = 0\n\n  return (\n    <Layout navHeading={navHeading} path=\"/\">\n      <SEO title=\"Home\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n\n      {/* Introduction Section */}\n      <IntroSection fullName={fullName} image={image} />\n      <HorizontalLine color=\"rgba(0, 0, 0, 0.5)\" />\n\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        authorFullName\n        navHeading\n        description\n      }\n    }\n    file(relativePath: { eq: \"home/intro-light-mode.png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}