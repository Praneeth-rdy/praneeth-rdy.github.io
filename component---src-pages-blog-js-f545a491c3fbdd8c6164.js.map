{"version":3,"sources":["webpack:///./src/components/blogItem.js","webpack:///./src/pages/blog.js"],"names":["node","postClass","className","style","padding","id","margin","frontmatter","title","fields","slug","fluid","thumbnail","childImageSharp","marginTop","marginBottom","quote","description","to","backgroundColor","height","BlogIndex","location","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","postCounter","path","keywords","map","key","count","props","query","render"],"mappings":"iOAIe,kBAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OACX,6BAASC,UAAU,sCAAsCC,MAAO,CAAEC,QAAS,IACvE,yBAAKF,UAAU,qBACX,wBAAIG,GAAG,kBAAkBF,MAAO,CAAEG,OAAQ,IAAON,EAAKO,YAAYC,OAASR,EAAKS,OAAOC,MACvF,kBAAC,IAAD,CACIC,MAAOX,EAAKO,YAAYK,UAAUC,gBAAgBF,MAClDT,UAAS,aAAeD,EAAf,KACDD,EAAKO,YAAYK,UAAjB,yBACRT,MACIH,EAAKO,YAAYK,WAAa,CAC1BE,UAAW,OACXC,aAAc,UAG1B,oCACKf,EAAKO,YAAYS,OAEtB,2BACKhB,EAAKO,YAAYU,cAG1B,kBAAC,OAAD,CAAMC,GAAI,QAAUlB,EAAKS,OAAOC,KAAMR,UAAU,4BAAhD,YAGA,wBACIC,MAAO,CACHgB,gBAAiB,qBACjBC,OAAQ,OCpBlBC,EAAY,SAAC,EAAUC,GAAc,IAAtBC,EAAqB,EAArBA,KACbC,EAAYD,EAAKE,KAAKC,aAAalB,MACnCmB,EAAQJ,EAAKK,kBAAkBC,MACjCC,EAAc,EAElB,OACE,kBAAC,IAAD,CAAQtB,MAAOgB,EAAWO,KAAK,SAC7B,kBAAC,IAAD,CACEvB,MAAM,OACNwB,SAAU,CAAC,OAAD,iCAGXT,EAAKE,KAAKC,aAAaT,aACtB,4BAAQf,UAAU,aAChB,wBAAIA,UAAU,mBACXqB,EAAKE,KAAKC,aAAaT,cAI9B,wBACEd,MAAO,CACLgB,gBAAiB,qBACjBC,OAAQ,KAGZ,yBAAKlB,UAAU,aACZyB,EAAMM,KAAI,YAAe,IAAZjC,EAAW,EAAXA,KAEZ,OADA8B,IAEE,kBAAC,EAAD,CACEI,IAAKlC,EAAKS,OAAOC,KACjByB,MAAOL,EACP9B,KAAMA,EACNC,UAAS,eA2CR,mBAAAmC,GAAK,OAClB,kBAAC,cAAD,CACEC,MApCY,aAqCZC,OAAQ,SAAAf,GAAI,OACV,kBAAC,EAAD,eAAWD,SAAUc,EAAMd,SAAUc,OAAK,EAACb,KAAMA,GAAUa,S","file":"component---src-pages-blog-js-f545a491c3fbdd8c6164.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nexport default ({ node, postClass }) => (\n    <article className=\"post-content page-template no-image\" style={{ padding: 0, }}>\n        <div className=\"post-content-body\">\n            <h3 id=\"heading-level-3\" style={{ margin: 0, }}>{node.frontmatter.title || node.fields.slug}</h3>\n            <Img\n                fluid={node.frontmatter.thumbnail.childImageSharp.fluid}\n                className={`post-card ${postClass\n                    } ${node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n                style={\n                    node.frontmatter.thumbnail && {\n                        marginTop: '2rem',\n                        marginBottom: '4rem',\n                    }\n                } />\n            <blockquote>\n                {node.frontmatter.quote}\n            </blockquote>\n            <p>\n                {node.frontmatter.description}\n            </p>\n        </div>\n        <Link to={'/blog' + node.fields.slug} className=\"button primary fit small\">\n            Readmore\n        </Link>\n        <hr\n            style={{\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                height: 2\n            }}\n        />\n    </article>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n// import \"../styles/global.scss\"\nimport \"../styles/normalize.css\"\nimport \"../styles/css/screen.css\"\nimport BlogItem from \"../components/blogItem\"\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst BlogIndex = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={siteTitle} path=\"/blog\">\n      <SEO\n        title=\"Blog\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      {/* <Bio /> */}\n      {data.site.siteMetadata.description && (\n        <header className=\"page-head\">\n          <h2 className=\"page-head-title\">\n            {data.site.siteMetadata.description}\n          </h2>\n        </header>\n      )}\n      <hr\n        style={{\n          backgroundColor: 'rgba(0, 0, 0, 0.5)',\n          height: 2\n        }}\n      />\n      <div className=\"blog-body\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <BlogItem\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            quote\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)"],"sourceRoot":""}