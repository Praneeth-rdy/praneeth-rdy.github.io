{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/temp.js"],"names":["Layout","props","navActive","title","path","children","React","useState","toggleNav","setToggleNav","home","about","elements","className","href","onClick","aria-label","role","aria-controls","id","class","to","target","rel","Date","getFullYear","Temp","location","siteTitle","data","site","siteMetadata","query","render"],"mappings":"4FAAA,qCA4HeA,IAzHA,SAAAC,GAAU,IAGnBC,EAFIC,EAA0BF,EAA1BE,MAAOC,EAAmBH,EAAnBG,KAAMC,EAAaJ,EAAbI,SADC,EAEYC,IAAMC,UAAS,GAA1CC,EAFe,KAEJC,EAFI,KAItB,OAAQL,GACN,IAAK,IACHF,EAAY,CACVQ,KAAM,cACNC,MAAO,GACPC,SAAU,IAEZ,MACF,IAAK,SACHV,EAAY,CACVS,MAAO,cACPD,KAAM,GACNE,SAAU,IAEZ,MACF,IAAK,YACHV,EAAY,CACVU,SAAU,cACVD,MAAO,GACPD,KAAM,IAER,MACF,QACER,EAAY,CACVQ,KAAM,GACNC,MAAO,GACPC,SAAU,IAGhB,OACE,yBAAKC,UAAS,iBAAkBL,EAAS,sBACvC,4BAAQK,UAAU,aAChB,yBAAKA,UAAU,uBACb,uBACEA,UAAU,aACVC,KAAI,IACJC,QAAS,kBAAMN,GAAcD,KAE7B,yBACEK,UAAU,gCACVG,aAAW,OACXC,KAAK,SACLC,gBAAc,cAEd,yBAAKL,UAAU,iBACb,yBAAKA,UAAU,uBAIrB,yBAAKM,GAAG,OAAOC,MAAM,kBACnB,wBAAIP,UAAU,MAAMI,KAAK,QACvB,wBAAIJ,UAAW,YAAcX,EAAUQ,KAAMO,KAAK,YAChD,kBAAC,OAAD,CAAMI,GAAE,KAAR,SAEF,wBAAIR,UAAW,aAAeX,EAAUS,MAAOM,KAAK,YAClD,kBAAC,OAAD,CAAMI,GAAE,UAAR,UAEF,wBAAIR,UAAW,gBAAkBX,EAAUU,SAAUK,KAAK,YACxD,kBAAC,OAAD,CAAMI,GAAE,aAAR,eAIN,yBAAKR,UAAU,oBACb,kBAAC,OAAD,CAAMA,UAAU,iBAAiBQ,GAAE,KAChClB,IAGL,yBAAKU,UAAU,mBACb,yBAAKA,UAAU,gBACb,uBACEC,KAAK,2BACLX,MAAM,WACNmB,OAAO,SACPC,IAAI,uBAJN,YAQA,uBACET,KAAK,sBACLX,MAAM,UACNmB,OAAO,SACPC,IAAI,uBAJN,WAQA,kBAAC,OAAD,CACEF,GAAE,WACFlB,MAAM,MACNmB,OAAO,SACPC,IAAI,uBAJN,WAYR,0BAAMJ,GAAG,YAAYN,UAAU,aAC7B,yBAAKM,GAAG,OAAON,UAAU,mBACtBR,IAGL,4BAAQQ,UAAU,aAAlB,MACU,IAAIW,MAAOC,cADrB,IACoC,kBAAC,OAAD,CAAMJ,GAAE,KAAQlB,GADpD,gBAEa,IACX,uBACEW,KAAK,uBACLQ,OAAO,SACPC,IAAI,uBAHN,c,kCChHR,wDAKMG,EAAO,SAAC,EAAUC,GAAc,IAC5BC,EAD2B,EAArBC,KACWC,KAAKC,aAAa5B,MACzC,OACI,kBAAC,IAAD,CAAQA,MAAOyB,GACX,6BACI,qCAgBD,mBAAA3B,GAAK,OAChB,kBAAC,cAAD,CACI+B,MAZQ,aAaRC,OAAQ,SAAAJ,GAAI,OACR,kBAACH,EAAD,eAAMC,SAAU1B,EAAM0B,SAAUE,KAAMA,GAAU5B","file":"component---src-pages-temp-js-b125ec413a3cb1b7a3d5.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = props => {\n  const { title, path, children } = props\n  const [toggleNav, setToggleNav] = React.useState(false)\n  var navActive\n  switch (path) {\n    case '/':\n      navActive = {\n        home: 'nav-current',\n        about: '',\n        elements: ''\n      }\n      break\n    case '/about':\n      navActive = {\n        about: 'nav-current',\n        home: '',\n        elements: ''\n      }\n      break\n    case '/elements':\n      navActive = {\n        elements: 'nav-current',\n        about: '',\n        home: ''\n      }\n      break\n    default:\n      navActive = {\n        home: '',\n        about: '',\n        elements: ''\n      }\n  }\n  return (\n    <div className={`site-wrapper ${toggleNav ? `site-head-open` : ``}`}>\n      <header className=\"site-head\">\n        <div className=\"site-head-container\">\n          <a\n            className=\"nav-burger\"\n            href={`#`}\n            onClick={() => setToggleNav(!toggleNav)}\n          >\n            <div\n              className=\"hamburger hamburger--collapse\"\n              aria-label=\"Menu\"\n              role=\"button\"\n              aria-controls=\"navigation\"\n            >\n              <div className=\"hamburger-box\">\n                <div className=\"hamburger-inner\" />\n              </div>\n            </div>\n          </a>\n          <nav id=\"swup\" class=\"site-head-left\">\n            <ul className=\"nav\" role=\"menu\">\n              <li className={\"nav-home \" + navActive.home} role=\"menuitem\">\n                <Link to={`/`}>Home</Link>\n              </li>\n              <li className={\"nav-about \" + navActive.about} role=\"menuitem\">\n                <Link to={`/about`}>About</Link>\n              </li>\n              <li className={\"nav-elements \" + navActive.elements} role=\"menuitem\">\n                <Link to={`/elements`}>Elements</Link>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"site-head-center\">\n            <Link className=\"site-head-logo\" to={`/`}>\n              {title}\n            </Link>\n          </div>\n          <div className=\"site-head-right\">\n            <div className=\"social-links\">\n              <a\n                href=\"https://www.facebook.com\"\n                title=\"Facebook\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Facebook\n              </a>\n              <a\n                href=\"https://twitter.com\"\n                title=\"Twitter\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Twitter\n              </a>\n              <Link\n                to={`/rss.xml`}\n                title=\"RSS\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                RSS\n              </Link>\n            </div>\n          </div>\n        </div>\n      </header>\n      <main id=\"site-main\" className=\"site-main\">\n        <div id=\"swup\" className=\"transition-fade\">\n          {children}\n        </div>\n      </main>\n      <footer className=\"site-foot\">\n        &copy; {new Date().getFullYear()} <Link to={`/`}>{title}</Link> &mdash;\n        Built with{\" \"}\n        <a\n          href=\"https://gatsbyjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Gatsby\n        </a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nconst Temp = ({ data }, location) => {\n    const siteTitle = data.site.siteMetadata.title\n    return (\n        <Layout title={siteTitle}>\n            <div>\n                <h1>Hi</h1>\n            </div>\n        </Layout>\n    )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nexport default props => (\n    <StaticQuery\n        query={indexQuery}\n        render={data => (\n            <Temp location={props.location} data={data} {...props} />\n        )}\n    />\n)\n"],"sourceRoot":""}